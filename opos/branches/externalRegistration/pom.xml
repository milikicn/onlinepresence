<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0">
    <modelVersion>4.0.0</modelVersion>
    <groupId>OPOS</groupId>
    <artifactId>OPOS</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>opos Tapestry 5 Application</name>
    
    <properties>
        <tapestry-release-version>5.2.6</tapestry-release-version>
        <spring.version>3.0.6.RELEASE</spring.version>
		<hibernate.version>4.0.0.CR2</hibernate.version>
		<mysql-connectior.version>5.1.17</mysql-connectior.version>
		<twitter4j.version>[2.1,)</twitter4j.version>
		<jersey.version>1.5</jersey.version>
		<jena.version>2.6.4</jena.version>
		<joseki.version>3.4.3</joseki.version>
		<sdb.version>1.3.4</sdb.version>
		<jopo.version>1.2.1</jopo.version>
    </properties>
    
	<dependencies>
		<!-- Tapestry -->
        <dependency>
            <groupId>org.apache.tapestry</groupId>
            <artifactId>tapestry-core</artifactId>
            <version>${tapestry-release-version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.tapestry</groupId>
            <artifactId>tapestry-test</artifactId>
            <version>${tapestry-release-version}</version>
            <scope>test</scope>
        </dependency>
        
		<!-- Provided by the servlet container, but sometimes referenced in the application
       code. -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
        
        <!-- Tapestry-resteasy module -->
        <dependency>
            <groupId>org.tynamo</groupId>
            <artifactId>tapestry-resteasy</artifactId>
            <version>0.2.1</version>
        </dependency>

		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-mock</artifactId>
			<version>2.0.8</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-dao</artifactId>
			<version>2.0.8</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-hibernate3</artifactId>
			<version>2.0.8</version>
		</dependency>
		
		<!-- Hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-annotations</artifactId>
			<version>3.4.0.GA</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-c3p0</artifactId>
			<version>4.0.0.CR2</version>
		</dependency>
		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
			<version>1.0.2</version>
		</dependency>
		<dependency>
    		<groupId>javax.transaction</groupId>
    		<artifactId>jta</artifactId>
    		<version>1.1</version>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>
		
		<!-- MySQL Connectior -->
		<dependency>
    		<groupId>mysql</groupId>
    		<artifactId>mysql-connector-java</artifactId>
    		<version>${mysql-connectior.version}</version>
		</dependency>
		
		<!-- Twitter4j -->
		<dependency>
			<groupId>org.twitter4j</groupId>
			<artifactId>twitter4j-core</artifactId>
			<version>${twitter4j.version}</version>
		</dependency>
		
		<!-- geonames library. -->
    	<dependency>
			<groupId>org.geonames</groupId>
			<artifactId>geonames</artifactId>
			<version>1.0</version>
		</dependency>
		
    	<!-- jOPO lib -->
    	<dependency> 
  			<groupId>net.onlinepresence</groupId> 
  			<artifactId>jopo</artifactId> 
  			<version>${jopo.version}</version> 
  		</dependency>
  		
		<!-- Jena dependencies -->
		<dependency>
			<groupId>com.hp.hpl.jena</groupId>
			<artifactId>jena</artifactId>
			<version>${jena.version}</version>
		</dependency>
		<dependency>
			<groupId>com.hp.hpl.jena</groupId>
			<artifactId>sdb</artifactId>
			<version>${sdb.version}</version>
		</dependency>
		
		<!-- Jenabean dependencies -->
		<dependency> 
  			<groupId>thewebsemantic</groupId> 
  			<artifactId>jenabean</artifactId> 
  			<version>1.0.7</version> 
  		</dependency>
		
		<!-- Joseki dependencies -->
		<dependency>
			<groupId>org.joseki</groupId>
			<artifactId>joseki</artifactId>
			<version>${joseki.version}</version>
		</dependency>
		
        <!-- JSON marshaller/unmarshaller -->
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jettison-provider</artifactId>
			<version>2.0.1.GA</version>
		</dependency>
		
		<!-- jackson -->
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jackson-provider</artifactId>
			<version>1.1.GA</version>
		</dependency>
		
		<!-- Simpleframework dependencies -->
		<dependency>
			<groupId>org.simpleframework</groupId>
			<artifactId>simple-xml</artifactId>
			<version>2.3.6</version>
		</dependency>
		<dependency>
			<groupId>dom4j</groupId>
			<artifactId>dom4j</artifactId>
			<version>1.6.1</version>
		</dependency>
		
		<!-- RestFB -->
		<dependency>
			<groupId>com.restfb</groupId>
			<artifactId>restfb</artifactId>
			<version>1.6.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.1</version>
			<scope>compile</scope>
		</dependency>
		
		<!-- Foursquare -->
		<dependency>
			<groupId>foursquare4j</groupId>
			<artifactId>foursquare4j</artifactId>
			<version>0.1.3</version>
		</dependency>
		<dependency>
			<groupId>net.oauth.core</groupId>
			<artifactId>oauth</artifactId>
			<version>20090531</version>
		</dependency>
		<dependency>
			<groupId>net.oauth.core</groupId>
			<artifactId>oauth-consumer</artifactId>
			<version>20090823</version>
		</dependency>
		
		<!-- JSON dependencies -->
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20090211</version>
		</dependency>
		
		<!--  SLF4J -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.2</version>
		</dependency>
		
		<!-- Testing -->
		
		<!-- A dependency on either JUnit or TestNG is required, or the surefire plugin (which runs the tests)
will fail, preventing Maven from packaging the WAR. Tapestry includes a large number
of testing facilities designed for use with TestNG (http://testng.org/), so it's recommended. -->
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>5.8</version>
			<classifier>jdk15</classifier>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>3.0</version>
			<scope>test</scope>
		</dependency>
		
    </dependencies>
    
    <build>
        <finalName>opos</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                    <optimize>true</optimize>
                </configuration>
            </plugin>

            <!-- Run the application using "mvn jetty:run" -->
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>maven-jetty-plugin</artifactId>
                <version>6.1.9</version>
                <configuration>
                    <!-- Log to the console. -->
                    <requestLog implementation="org.mortbay.jetty.NCSARequestLog">
                        <!-- This doesn't do anything for Jetty, but is a workaround for a Maven bug
                             that prevents the requestLog from being set. -->
                        <append>true</append>
                    </requestLog>
					<connectors>
						<connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
							<port>9091</port>
							<maxIdleTime>60000</maxIdleTime>
						</connector>
					</connectors>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <reporting>

        <!-- Adds a report detailing the components, mixins and base classes defined by this module. -->
        <plugins>
            <plugin>
                <groupId>org.apache.tapestry</groupId>
                <artifactId>tapestry-component-report</artifactId>
                <version>${tapestry-release-version}</version>
                <configuration>
                    <rootPackage>opos</rootPackage>
                </configuration>
            </plugin>
        </plugins>
    </reporting>

    <repositories>
        <!-- This repository is only needed if the Tapestry released artifacts haven't made it to the central Maven repository yet. -->
        <repository>
            <id>tapestry</id>
            <url>http://tapestry.formos.com/maven-repository/</url>
        </repository>

        <!-- This repository is only needed when the tapestry-release-version is a snapshot release. -->
        <repository>
            <id>tapestry-snapshots</id>
            <url>http://tapestry.formos.com/maven-snapshot-repository/</url>
        </repository>

        <repository>
            <id>codehaus.snapshots</id>
            <url>http://snapshots.repository.codehaus.org</url>
        </repository>
        <repository>
            <id>OpenQA_Release</id>
            <name>OpenQA Release Repository</name>
            <url>http://archiva.openqa.org/repository/releases/</url>
        </repository>
        
        <repository> 
			<id>OPO Code Repository</id> 
			<url>http://onlinepresence.googlecode.com/svn/repo</url> 
		</repository>
		
		<repository>
			<id>twitter4j.org</id>
			<name>twitter4j.org Repository</name>
			<url>http://twitter4j.org/maven2</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		
		<repository>
			<id>repo-jboss</id>
			<name>JBoss Maven - Repository NEXUS</name>
			<url>http://repository.jboss.org/nexus/content/groups/public-jboss/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		
		<!-- Needed for RESTEasy and esteasy-jackson-provider -->
		<repository>
			<id>jboss</id>
			<url>http://repository.jboss.org/maven2</url>
		</repository>
		
		<repository>
			<id>foursquare4j</id>
			<name>foursquare4j</name>
			<url>http://foursquare4j.googlecode.com/svn/maven2</url>
		</repository>
    
		<repository>
			<id>oAuth</id>
			<name>foursquare4j</name>
			<url>http://oauth.googlecode.com/svn/code/maven</url>
		</repository>
		
		<repository>
			<id>repo-jena</id>
			<name>Jena Maven - Repository</name>
			<url>http://openjena.org/repo/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		
    </repositories>

    <pluginRepositories>
        <!-- As above, this can be commented out when access to the snapshot version
of a Tapestry Maven plugin is not required.   -->
        <pluginRepository>
            <id>tapestry-snapshots</id>
            <url>http://tapestry.formos.com/maven-snapshot-repository/</url>
        </pluginRepository>
    </pluginRepositories>

</project>
